
version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: recrutech-auth-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: recrutech_auth
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - recrutech-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  # The auth-service has been commented out to allow manual startup in debug mode
  # To run the auth service manually, use your IDE's debug configuration or run:
  # cd recrutech-services/recrutech-auth
  # mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"
  #
  # auth-service:
  #   build:
  #     context: ..
  #     dockerfile: recrutech-auth/Dockerfile
  #   container_name: recrutech-auth-service
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   ports:
  #     - "8082:8082"
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/recrutech_auth?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
  #     - SPRING_DATASOURCE_USERNAME=root
  #     - SPRING_DATASOURCE_PASSWORD=root
  #     - SERVER_PORT=8082
  #     - JWT_PUBLIC_KEY=/app/certs/public.pem
  #     - JWT_PRIVATE_KEY=/app/certs/private.pem
  #   volumes:
  #     - ./src/main/resources/certs:/app/certs
  #   networks:
  #     - recrutech-network
  #   restart: always

networks:
  recrutech-network:
    driver: bridge

volumes:
  mysql-data: