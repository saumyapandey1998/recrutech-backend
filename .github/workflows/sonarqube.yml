name: SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for Sonar analysis

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Start MySQL via Docker Compose
        working-directory: ./recrutech-services  # ✅ KORRIGIERT
        run: docker compose up -d mysql

      - name: Wait for MySQL to be healthy
        working-directory: ./recrutech-services  # ✅ KORRIGIERT
        run: |
          for i in {1..10}; do
            status=$(docker inspect --format='{{json .State.Health.Status}}' recrutech-mysql)
            if echo "$status" | grep -q healthy; then
              echo "✅ MySQL is healthy."
              break
            fi
            echo "⏳ Waiting for MySQL... ($i/10)"
            sleep 5
          done

      - name: Build and analyze with SonarCloud
        # ✅ working-directory entfernt - Multi-Module-Analyse vom Root
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ckc-efehan_recrutech-backend
